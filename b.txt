local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = "Key System", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionKeySystem"})

local accountId = 42762
local allowPassThrough = false
local allowKeyRedeeming = false
local useDataModel = false
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local localPlayerId = Players.LocalPlayer.UserId
local rateLimit = false
local rateLimitCountdown = 0
local errorWait = false

local folderName = "LamelaHub"
local fileName = "key.txt"

-- Function to fetch whitelist link
local function getLink()
    return string.format("https://gateway.platoboost.com/a/%i?id=%i", accountId, localPlayerId)
end

-- Function to show messages in Orion UI
local function onMessage(message)
    print(message)
    OrionLib:MakeNotification({
        Name = "Message",
        Content = message,
        Time = 5
    })
end

-- Function to save the key to Workspace
local function saveKeyToWorkspace(key)
    local folder = Workspace:FindFirstChild(folderName) or Instance.new("Folder", Workspace)
    folder.Name = folderName

    local keyFile = folder:FindFirstChild(fileName) or Instance.new("StringValue", folder)
    keyFile.Name = fileName
    keyFile.Value = key
end

-- Function to load the key from Workspace
local function loadKeyFromWorkspace()
    local folder = Workspace:FindFirstChild(folderName)
    if folder then
        local keyFile = folder:FindFirstChild(fileName)
        if keyFile then
            return keyFile.Value
        end
    end
    return nil
end

-- Function to verify the key
local function verify(key)
    if errorWait or rateLimit then
        onMessage("You are currently rate-limited or an error occurred. Please wait before trying again.")
        return false
    end

    onMessage("Checking key...")
local url = string.format("https://api-gateway.platoboost.com/v1/public/whitelist/%i/%i?key=%s", accountId, localPlayerId, key)

    local function handleResult(resultBody)
        if string.find(resultBody, "true") then
            onMessage("Successfully whitelisted key!")
            saveKeyToWorkspace(key)
            return true
        elseif string.find(resultBody, "false") then
            if allowKeyRedeeming then
                local redeemUrl = string.format("https://api-gateway.platoboost.com/v1/authenticators/redeem/%i/%i/%s", accountId, localPlayerId, key)
                local redeemResult = request({
                    Url = redeemUrl,
                    Method = "POST"
                })

                if redeemResult.StatusCode == 200 and string.find(redeemResult.Body, "true") then
                    onMessage("Successfully redeemed key!")
                    saveKeyToWorkspace(key)
                    return true
                end
            end
        end
        onMessage("Key is invalid!")
        return false
    end

    local status, result = pcall(function()
        return useDataModel and game:HttpGetAsync(url) or request({
            Url = url,
            Method = "GET"
        })
    end)

    if status then
        if useDataModel or result.StatusCode == 200 then
            return handleResult(result.Body)
        elseif result.StatusCode == 204 then
            onMessage("Account wasn't found, check accountId")
            return false
        elseif result.StatusCode == 429 then
            if not rateLimit then
                rateLimit = true
                rateLimitCountdown = 10
                task.spawn(function()
                    while rateLimit do
                        onMessage(string.format("You are being rate-limited, please slow down. Try again in %i second(s).", rateLimitCountdown))
                        task.wait(1)
                        rateLimitCountdown = rateLimitCountdown - 1
if rateLimitCountdown < 0 then
                            rateLimit = false
                            rateLimitCountdown = 0
                            onMessage("Rate limit is over, please try again.")
                        end
                    end
                end)
            end
        else
            return allowPassThrough
        end
    else
        onMessage("An error occurred while contacting the server!")
        return allowPassThrough
    end
    return false
end

-- Load key from Workspace at the start
getgenv().key = loadKeyFromWorkspace()

-- GUI Setup
local Tab = Window:MakeTab({
    Name = "Key System",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

Tab:AddTextbox({
    Name = "Enter Key",
    Default = "",
    TextDisappear = true,
    Callback = function(value)
        local isVerified = verify(value)
        if isVerified then
            onMessage("Access Granted!")

            -- Destroy Orion UI
            OrionLib:Destroy()

            -- Load the external script
            loadstring(game:HttpGet("https://raw.githubusercontent.com/doughkingofdarkness/d/main/script.lua"))()
        else
            onMessage("Access Denied!")
        end
    end
})

Tab:AddButton({
    Name = "Get Key",
    Callback = function()
        local link = getLink()
        onMessage("Visit the following link to get your key: " .. link)
        setclipboard(link)  -- This will copy the link to the user's clipboard
    end
})

if getgenv().key then
    onMessage("Key found in Workspace, verifying...")
    local isVerified = verify(getgenv().key)
    if isVerified then
        -- Destroy Orion UI
        OrionLib:Destroy()

        -- Load the external script
        loadstring(game:HttpGet("https://raw.githubusercontent.com/doughkingofdarkness/d/main/script.lua"))()
    end
else
    onMessage("No key found in Workspace, please enter a key.")
end

OrionLib:Init()
